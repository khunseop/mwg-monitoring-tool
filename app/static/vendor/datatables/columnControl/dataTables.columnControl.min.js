(function(factory){
	if(typeof define==='function'&&define.amd){define(['jquery','datatables.net'],function($){return factory($);});}
	else if(typeof exports==='object'){module.exports=function(root,$){if(!root){root=window;}if(!$||!$.fn.dataTable){$=require('datatables.net')(root,$).$;}return factory($);};}
	else{factory(jQuery);}
}(function($){
	'use strict';

	function debounce(fn, wait){var t;return function(){var ctx=this,args=arguments;clearTimeout(t);t=setTimeout(function(){fn.apply(ctx,args);},wait);};}

	function coerceArray(value){if(value==null)return[];if(Array.isArray(value))return value;return [value];}

	function attachOnce(dtApi, options){
		options=options||{};
		var settings=dtApi.settings()[0];
		var container=$(dtApi.table().container());
		var $thead=container.find('div.dataTables_scrollHead thead,div.dt-scroll-head thead');
		if($thead.length===0){$thead=$(dtApi.table().node()).find('thead');}
		if($thead.length===0)return;
		$thead.find('tr.cc-filters').remove();
		var totalCols=dtApi.columns().count();
		var skip=coerceArray(options.skipColumns||[]);
		var types=options.types||{};
		var trigger=options.trigger||'keyup'; // 'keyup' | 'enter' | 'change'
		var $filterTr=$('<tr class="cc-filters"></tr>');
		for(var i=0;i<totalCols;i++){
			if(skip.indexOf(i)!==-1){$filterTr.append('<th></th>');continue;}
			var controlType=types[i]||'text';
			if(controlType==='select'){$filterTr.append('<th><div class="select is-small is-fullwidth"><select><option value=""></option></select></div></th>');}
			else{$filterTr.append('<th><input type="text" class="input is-small" placeholder="필터" style="width:100%"></th>');}
		}
		$thead.append($filterTr);
		// Prefill controls from current column searches to persist values across draws
		try{dtApi.columns().every(function(colIdx){var th=$filterTr.find('th').eq(colIdx);var input=th.find('input');var select=th.find('select');var cur=(dtApi.column(colIdx).search()||'');if(input.length){input.val(cur);}if(select.length){if(cur&&select.find('option[value="'+$('<div>').text(cur).html()+'"]').length===0){select.append('<option value="'+$('<div>').text(cur).html()+'">'+$('<div>').text(cur).html()+'</option>');}select.val(cur);}});}catch(e){}
		try{
			if(!settings.oInit.serverSide){
				dtApi.columns().every(function(colIdx){
					if(skip.indexOf(colIdx)!==-1)return;var controlType=types[colIdx]||'text';if(controlType!=='select')return;var column=dtApi.column(colIdx);var unique={};column.data().each(function(v){var s=(v==null)?'':String(v);unique[s]=true;});var list=Object.keys(unique).sort();var th=$filterTr.find('th').eq(colIdx);var sel=th.find('select');list.forEach(function(val){sel.append('<option value="'+$('<div>').text(val).html()+'">'+$('<div>').text(val).html()+'</option>');});
				});
			}
		}catch(e){}

		dtApi.columns().every(function(colIdx){
			if(skip.indexOf(colIdx)!==-1)return;var th=$filterTr.find('th').eq(colIdx);var input=th.find('input');var select=th.find('select');var apply=debounce(function(val){dtApi.column(colIdx).search(val||'').draw();},250);
			if(input.length){
				if(trigger==='enter'){
					input.on('keyup',function(e){if(e.key==='Enter'){apply(this.value||'');}});
				}else if(trigger==='change'){
					input.on('change',function(){apply(this.value||'');});
				}else{
					input.on('keyup change',function(){apply(this.value||'');});
				}
			}
			if(select.length){select.on('change',function(){apply(this.value||'');});}
		});
	}

	$.fn.dataTable.Api.register('columnControl()', function(opts){attachOnce(this, opts||{});return this;});
	$.fn.dataTable.Api.register('columnControl.bind()', function(opts){attachOnce(this, opts||{});var api=this;api.on('draw', function(){attachOnce(api, opts||{});});return this;});

	return $.fn.dataTable;
}));

